import app
import net
import ui
import snd
import wndMgr
import uiScriptLocale
import localeInfo

# ´ëºÎºĞÀÇ ½ÇÁ¦ ±¸ÇöÀº PythonApplicationLogo.cpp¿¡ ÀÖ´Ù.

app.SetGuildMarkPath("test")

class LogoWindow(ui.ScriptWindow):

	# º¸¿© ÁÙ µ¿¿µ»ó ¸ñ·Ï (¹è¿­ ¼ø¼­´ë·Î º¸¿©ÁÜ)
	videoList = []
	
	def __init__(self, stream):
		print "NEW LOGO WINDOW  ----------------------------------------------------------------------------"
		ui.ScriptWindow.__init__(self)
		net.SetPhaseWindow(net.PHASE_WINDOW_LOGO, self)
		self.stream = stream
		self.playingVideo = 0
		self.bNeedUpdate = TRUE
		self.nextLogoIndex = 0
		
		if (localeInfo.IsEUROPE() or localeInfo.IsARABIC()) and (not localeInfo.IsCHEONMA() and not localeInfo.IsWE_KOREA()):
			self.videoList = ["gf.mpg", "ymir.mpg"]
		else:
			self.videoList = ["ymir.mpg"]

	def __del__(self):
		ui.ScriptWindow.__del__(self)
		net.SetPhaseWindow(net.PHASE_WINDOW_LOGO, 0)
		print "---------------------------------------------------------------------------- DELETE LOGO WINDOW"
		
	def Open(self):
		self.SetSize(wndMgr.GetScreenWidth(), wndMgr.GetScreenHeight())
		self.SetWindowName("SelectLogoWindow")
		self.Show()
		
		self.LoadNextVideo()

		app.ShowCursor()
		print "OPEN LOGO WINDOW  ----------------------------------------------------------------------------"
		
	def Close(self):
		print "---------------------------------------------------------------CLOSE LOGO WINDOW"
		app.OnLogoClose()
		self.KillFocus()
		self.Hide()
		
		app.HideCursor()
		
	# ¿µ»ó Àç»ıÀÌ ºÒ°¡´ÉÇÑ È¯°æÀÌ°Å³ª, ÆÄÀÏÀÌ Á¸ÀçÇÏÁö ¾Ê´Â °æ¿ì introLoginÀ¸·Î skip.
	def OnUpdate(self):
		if self.bNeedUpdate:
			if self.playingVideo == 0:
				if self.nextLogoIndex < len(self.videoList):
					self.CloseVideo()
					self.LoadNextVideo()
				else:
					self.bNeedUpdate = FALSE
					self.stream.SetLoginPhase()
			else:
				self.playingVideo = app.OnLogoUpdate()
		
		
	def OnRender(self):
		if self.playingVideo:
			app.OnLogoRender()
			
	def LoadNextVideo(self):
		if self.nextLogoIndex < len(self.videoList):
			self.playingVideo = app.OnLogoOpen(self.videoList[self.nextLogoIndex])
			self.nextLogoIndex = self.nextLogoIndex + 1
			
	def CloseVideo(self):
		app.OnLogoClose()
		
